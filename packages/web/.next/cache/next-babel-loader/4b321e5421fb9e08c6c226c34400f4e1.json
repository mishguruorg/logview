{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/admin/src/github.com/mishguruorg/services/logview/packages/web/components/list.tsx\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    searchLogs(input: { last: 20, afterDate: \\\"2019-08-11T00:00:00.000Z\\\" }) {\\n      results {\\n        id\\n        userId\\n        sentFrom\\n        type\\n        sentAt\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport DateString from './date-string';\nexport var searchLogsQuery = gql(_templateObject());\nexport default function PostList() {\n  return React.createElement(Query, {\n    query: searchLogsQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, function (_ref) {\n    var loading = _ref.loading,\n        error = _ref.error,\n        data = _ref.data;\n\n    if (error) {\n      console.error(error);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Error loading posts.\");\n    }\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, data.searchLogs.results.reverse().map(function (log) {\n      return React.createElement(\"tr\", {\n        key: log.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, log.userId), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, log.sentFrom), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, log.type), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(DateString, {\n        value: new Date(log.sentAt),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }))));\n  });\n}","map":{"version":3,"sources":["/home/admin/src/github.com/mishguruorg/services/logview/packages/web/components/list.tsx"],"names":["Query","gql","DateString","searchLogsQuery","PostList","loading","error","data","console","searchLogs","results","reverse","map","log","id","userId","sentFrom","type","Date","sentAt"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,IAAMC,eAAe,GAAGF,GAAH,mBAArB;AAcP,eAAe,SAASG,QAAT,GAAqB;AAClC,SACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAA8B;AAAA,QAA3BE,OAA2B,QAA3BA,OAA2B;AAAA,QAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AAC7B,QAAID,KAAJ,EAAW;AACTE,MAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD;;AAED,QAAID,OAAJ,EAAa;AACX,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,IAAI,CAACE,UAAL,CAAgBC,OAAhB,CAAwBC,OAAxB,GAAkCC,GAAlC,CAAsC,UAACC,GAAD;AAAA,aACrC;AAAI,QAAA,GAAG,EAAEA,GAAG,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,GAAG,CAACE,MAAT,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,GAAG,CAACG,QAAT,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,GAAG,CAACI,IAAT,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,IAAIC,IAAJ,CAASL,GAAG,CAACM,MAAb,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAJF,CADqC;AAAA,KAAtC,CADH,CADF,CADF,CADF;AAgBD,GA3BH,CADF;AA+BD","sourcesContent":["import { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nimport DateString from './date-string'\n\nexport const searchLogsQuery = gql`\n  query {\n    searchLogs(input: { last: 20, afterDate: \"2019-08-11T00:00:00.000Z\" }) {\n      results {\n        id\n        userId\n        sentFrom\n        type\n        sentAt\n      }\n    }\n  }\n`\n\nexport default function PostList () {\n  return (\n    <Query query={searchLogsQuery}>\n      {({ loading, error, data }) => {\n        if (error) {\n          console.error(error)\n          return <div>Error loading posts.</div>\n        }\n\n        if (loading) {\n          return <div>Loading</div>\n        }\n\n        return (\n          <section>\n            <table>\n              <tbody>\n                {data.searchLogs.results.reverse().map((log) => (\n                  <tr key={log.id}>\n                    <td>{log.userId}</td>\n                    <td>{log.sentFrom}</td>\n                    <td>{log.type}</td>\n                    <td><DateString value={new Date(log.sentAt)} /></td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </section>\n        )\n      }}\n    </Query>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}