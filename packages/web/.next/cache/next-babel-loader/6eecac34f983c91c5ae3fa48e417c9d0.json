{"ast":null,"code":"var _jsxFileName = \"/home/admin/src/github.com/mishguruorg/services/logview/packages/web/lib/auth0.tsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\nlet GLOBAL_AUTH0 = null;\nexport const getAuth0 = () => GLOBAL_AUTH0;\nexport const Auth0Context = React.createContext(undefined);\nexport const useAuth0 = () => useContext(Auth0Context);\n\nconst onRedirectCallback = appState => {\n  window.history.replaceState({}, document.title, appState && appState.targetUrl ? appState.targetUrl : window.location.pathname);\n};\n\nexport const Auth0Provider = ({\n  children\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client({\n        redirect_uri: 'http://localhost:3000/',\n        domain: 'mishguruadmin.auth0.com',\n        client_id: 'lj6liY2gXGfmrKijjPNX2rVTtGsXh6t3',\n        audience: 'https://logview.mish.guru/'\n      });\n      setAuth0(auth0FromHook);\n      GLOBAL_AUTH0 = auth0FromHook;\n\n      if (window.location.search.includes(\"code=\")) {\n        try {\n          const {\n            appState\n          } = await auth0FromHook.handleRedirectCallback();\n          onRedirectCallback(appState);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n\n    initAuth0().catch(console.error);\n  }, []);\n\n  const handleRedirectCallback = async () => {\n    try {\n      setLoading(true);\n      await auth0Client.handleRedirectCallback();\n      const user = await auth0Client.getUser();\n      setUser(user);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return React.createElement(Auth0Context.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      handleRedirectCallback,\n      getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n      loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n      getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n      logout: (...p) => auth0Client.logout(...p)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/home/admin/src/github.com/mishguruorg/services/logview/packages/web/lib/auth0.tsx"],"names":["React","useState","useEffect","useContext","createAuth0Client","GLOBAL_AUTH0","getAuth0","Auth0Context","createContext","undefined","useAuth0","onRedirectCallback","appState","window","history","replaceState","document","title","targetUrl","location","pathname","Auth0Provider","children","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","initAuth0","auth0FromHook","redirect_uri","domain","client_id","audience","search","includes","handleRedirectCallback","error","console","getUser","catch","getIdTokenClaims","p","loginWithRedirect","getTokenSilently","logout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport createAuth0Client from '@auth0/auth0-spa-js'\n\nlet GLOBAL_AUTH0 = null\nexport const getAuth0 = () => GLOBAL_AUTH0\n\nexport const Auth0Context = React.createContext(undefined)\n\nexport const useAuth0 = () => useContext(Auth0Context)\n\nconst onRedirectCallback = (appState: Record<string, string>) => {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nexport const Auth0Provider = ({\n  children,\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState()\n  const [user, setUser] = useState()\n  const [auth0Client, setAuth0] = useState()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client({\n        redirect_uri: 'http://localhost:3000/',\n        domain: 'mishguruadmin.auth0.com',\n        client_id: 'lj6liY2gXGfmrKijjPNX2rVTtGsXh6t3',\n        audience: 'https://logview.mish.guru/'\n      })\n      setAuth0(auth0FromHook)\n      GLOBAL_AUTH0 = auth0FromHook\n\n      if (window.location.search.includes(\"code=\")) {\n        try {\n          const { appState } = await auth0FromHook.handleRedirectCallback()\n          onRedirectCallback(appState)\n        } catch (error) {\n          console.error(error)\n        }\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated()\n      setIsAuthenticated(isAuthenticated)\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser()\n        setUser(user)\n      }\n\n      setLoading(false)\n    }\n\n    initAuth0().catch(console.error)\n  }, [])\n\n  const handleRedirectCallback = async () => {\n    try {\n      setLoading(true)\n      await auth0Client.handleRedirectCallback()\n      const user = await auth0Client.getUser()\n      setUser(user)\n      setIsAuthenticated(true)\n    } \n    catch (error) {\n      console.error(error)\n    }\n    finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}